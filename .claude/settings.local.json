{
  "permissions": {
    "allow": [
      "Bash(rmdir:*)",
      "Bash(rm:*)",
      "Bash(npm run lint)",
      "Bash(npm run build:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(mkdir:*)",
      "Bash(chmod:*)",
      "Bash(git commit:*)",
      "Bash(cp:*)",
      "Bash(find:*)",
      "Bash(git checkout:*)",
      "Bash(npm run dev:*)",
      "Bash(tree:*)",
      "Bash(mv:*)",
      "Bash(gh repo edit:*)",
      "Bash(gh auth:*)",
      "Bash(gh repo view:*)",
      "Bash(ls:*)",
      "Bash(pwsh:*)",
      "Bash(powershell:*)",
      "Bash(npm install:*)",
      "Bash(winget install:*)",
      "Bash(cmd /c:*)",
      "Bash(winget show:*)",
      "Bash(where pac)",
      "Bash(dotnet tool list:*)",
      "Bash(winget uninstall:*)",
      "Bash(curl:*)",
      "Bash(msiexec:*)",
      "Bash(dotnet tool install:*)",
      "Bash(cat:*)",
      "Bash(git reset:*)",
      "Bash(git config:*)",
      "Bash(git ls-tree:*)",
      "Bash(git mv:*)",
      "Bash(ping:*)",
      "Bash(bash:*)",
      "Bash(gh secret list:*)",
      "Bash(git rm:*)",
      "Bash(gh secret set:*)",
      "Bash(git filter-branch:*)",
      "Bash(git stash:*)",
      "Bash(git remote set-url:*)",
      "Bash(git clone:*)",
      "Bash(node:*)",
      "Bash(./update-wiki.sh)",
      "Bash(gh run list:*)",
      "Bash(git fetch:*)",
      "Bash(git branch:*)",
      "Bash(npm uninstall:*)",
      "Bash(grep:*)",
      "Bash(az:*)",
      "Bash(pac:*)",
      "Bash(npx:*)",
      "Bash(start:*)",
      "Bash(cmd.exe:*)",
      "Bash(for service in faith-family-medicine clearroad-dot-exams valorview-ime peacewithin-life-coaching nourish-thrive-journey truerelief-therapy myclinic365 carebridge valorlink-letter)",
      "Bash(do echo \"Checking: $service\")",
      "Bash(test:*)",
      "Bash(done)",
      "Bash(taskkill:*)",
      "Bash(tail:*)",
      "Bash(find app/care -name \"*.jsx\" -exec sed -i \"s|from ''../../../components/header/header''|from ''../../../components/header''|g\" {} ;)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfix: major site fixes and improvements\n\n- Fixed missing Header/Footer components on 8 care pages\n- Fixed import paths for Header component (header/header -> header)\n- Fixed build error by replacing FaUsersMedical with FaUserMd icon\n- Created missing /care/cash-pay page with comprehensive pricing\n- Fixed JSX structure issues in cash-pay and chronic-disease pages\n- Created email debug component for troubleshooting\n- Updated blog page with magazine-style layout\n- Fixed email subscription with localStorage fallback\n- Removed test-email debug page\n- All 47 pages now build successfully\n\nðŸ¤– Generated with Claude Code\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit -m \"$(cat <<''EOF''\nfix: correct syntax error in faith-family-medicine page\n\n- Fixed missing proper indentation for hero div\n- Removed duplicate closing parenthesis and brace\n- Page now loads correctly\n\nðŸ¤– Generated with Claude Code\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(cd \"C:\\Users\\JosephGettings\\garciafamilymedicine.care\\app\\care\")",
      "Bash(grep -h \"className={styles\\.\" medicare/page.jsx)",
      "Bash(grep -E \"className={styles\\.(hero|servicePage|mainContent|container|introSection|leadText|servicesSection|servicesGrid|serviceCard|serviceIcon|serviceList)\" pediatric-care/page.jsx)",
      "Bash(find . -name \"*.module.css\" -type f)",
      "Bash(grep -l \"from ''../service.module.css''\" */page.jsx)",
      "Bash(find app/care -name \"*.jsx\" -exec wc -l {} +)",
      "Bash(git add -A)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfix: standardize primary-care page formatting\n\n- Converted primary-care page to use standard service.module.css styles\n- Added hero section with overlay matching other care pages\n- Reorganized content into service cards with icons\n- Added process steps, FAQ section, and approach sections\n- Now consistent with all other Learn/care pages\n\nðŸ¤– Generated with Claude Code\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push origin main)",
      "Bash(for:*)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(sed:*)",
      "Bash(git restore:*)"
    ],
    "deny": []
  }
}